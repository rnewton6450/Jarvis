"use strict";(()=>{var e={};e.id=300,e.ids=[300],e.modules={6037:e=>{e.exports=require("mongoose")},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6762:(e,t)=>{Object.defineProperty(t,"M",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},3119:(e,t,r)=>{r.r(t),r.d(t,{config:()=>f,default:()=>c,routeModule:()=>P});var n={};r.r(n),r.d(n,{default:()=>p});var o=r(9947),a=r(2706),i=r(6762),s=r(5250),u=r(6037),d=r.n(u);let l=new(d()).Schema({userId:{type:String,required:!0},gptResponse:{type:String,required:!0},createdAt:{type:Date,default:Date.now}}),m=d().models.Timestamp||d().model("Timestamp",l);async function p(e,t){if("POST"!==e.method)return t.status(405).json({error:"Method not allowed"});let{userId:r,gptResponse:n}=e.body;if(!r||!n)return t.status(400).json({error:"Missing required fields"});try{await (0,s.connectToDatabase)();let e=new m({userId:r,gptResponse:n,timestamp:new Date});await e.save(),t.status(201).json({message:"Timestamp logged successfully",timestamp:e})}catch(e){console.error("Error in addTimestamp:",e),t.status(500).json({error:"Internal Server Error"})}}let c=(0,i.M)(n,"default"),f=(0,i.M)(n,"config"),P=new o.PagesAPIRouteModule({definition:{kind:a.A.PAGES_API,page:"/api/addTimestamp",pathname:"/api/addTimestamp",bundlePath:"",filename:""},userland:n})},5250:(e,t,r)=>{if(r(6037),!process.env.MONGODB_URI)throw Error("Please define the MONGODB_URI environment variable inside .env");let n=global.mongoose;n||(n=global.mongoose={conn:null,promise:null})},2706:(e,t)=>{var r;Object.defineProperty(t,"A",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE"}(r||(r={}))},9947:(e,t,r)=>{e.exports=r(5600)}};var t=require("../../webpack-api-runtime.js");t.C(e);var r=t(t.s=3119);module.exports=r})();